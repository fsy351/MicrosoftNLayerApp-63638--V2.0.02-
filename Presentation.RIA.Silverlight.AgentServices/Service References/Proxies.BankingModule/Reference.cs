//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.235
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankAccountDTO", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Samples.NLayerApp.Application.M" +
        "ainBoundedContext.BankingModule.DTOs")]
    public partial class BankAccountDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private decimal BalanceField;
        
        private string BankAccountNumberField;
        
        private string CustomerFirstNameField;
        
        private System.Guid CustomerIdField;
        
        private string CustomerLastNameField;
        
        private System.Guid IdField;
        
        private bool LockedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccountNumber {
            get {
                return this.BankAccountNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccountNumberField, value) != true)) {
                    this.BankAccountNumberField = value;
                    this.RaisePropertyChanged("BankAccountNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerFirstName {
            get {
                return this.CustomerFirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerFirstNameField, value) != true)) {
                    this.CustomerFirstNameField = value;
                    this.RaisePropertyChanged("CustomerFirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid CustomerId {
            get {
                return this.CustomerIdField;
            }
            set {
                if ((this.CustomerIdField.Equals(value) != true)) {
                    this.CustomerIdField = value;
                    this.RaisePropertyChanged("CustomerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerLastName {
            get {
                return this.CustomerLastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerLastNameField, value) != true)) {
                    this.CustomerLastNameField = value;
                    this.RaisePropertyChanged("CustomerLastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Locked {
            get {
                return this.LockedField;
            }
            set {
                if ((this.LockedField.Equals(value) != true)) {
                    this.LockedField = value;
                    this.RaisePropertyChanged("Locked");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceError", Namespace="Microsoft.Samples.DistributedServices.Core")]
    public partial class ServiceError : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BankActivityDTO", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Samples.NLayerApp.Application.M" +
        "ainBoundedContext.BankingModule.DTOs")]
    public partial class BankActivityDTO : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ActivityDescriptionField;
        
        private decimal AmountField;
        
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityDescription {
            get {
                return this.ActivityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityDescriptionField, value) != true)) {
                    this.ActivityDescriptionField = value;
                    this.RaisePropertyChanged("ActivityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Proxies.BankingModule.IBankingModuleService")]
    public interface IBankingModuleService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBankingModuleService/AddNewBankAccount", ReplyAction="http://tempuri.org/IBankingModuleService/AddNewBankAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.ServiceError), Action="http://tempuri.org/IBankingModuleService/AddNewBankAccountApplicationServiceError" +
            "Fault", Name="ServiceError", Namespace="Microsoft.Samples.DistributedServices.Core")]
        System.IAsyncResult BeginAddNewBankAccount(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO bankAccount, System.AsyncCallback callback, object asyncState);
        
        Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO EndAddNewBankAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBankingModuleService/LockBankAccount", ReplyAction="http://tempuri.org/IBankingModuleService/LockBankAccountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.ServiceError), Action="http://tempuri.org/IBankingModuleService/LockBankAccountApplicationServiceErrorFa" +
            "ult", Name="ServiceError", Namespace="Microsoft.Samples.DistributedServices.Core")]
        System.IAsyncResult BeginLockBankAccount(System.Guid bankAccountId, System.AsyncCallback callback, object asyncState);
        
        bool EndLockBankAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBankingModuleService/FindBankAccounts", ReplyAction="http://tempuri.org/IBankingModuleService/FindBankAccountsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.ServiceError), Action="http://tempuri.org/IBankingModuleService/FindBankAccountsApplicationServiceErrorF" +
            "ault", Name="ServiceError", Namespace="Microsoft.Samples.DistributedServices.Core")]
        System.IAsyncResult BeginFindBankAccounts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO> EndFindBankAccounts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBankingModuleService/FindBankAccountActivities", ReplyAction="http://tempuri.org/IBankingModuleService/FindBankAccountActivitiesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.ServiceError), Action="http://tempuri.org/IBankingModuleService/FindBankAccountActivitiesApplicationServ" +
            "iceErrorFault", Name="ServiceError", Namespace="Microsoft.Samples.DistributedServices.Core")]
        System.IAsyncResult BeginFindBankAccountActivities(System.Guid bankAccountId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankActivityDTO> EndFindBankAccountActivities(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBankingModuleService/PerformTransfer", ReplyAction="http://tempuri.org/IBankingModuleService/PerformTransferResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.ServiceError), Action="http://tempuri.org/IBankingModuleService/PerformTransferApplicationServiceErrorFa" +
            "ult", Name="ServiceError", Namespace="Microsoft.Samples.DistributedServices.Core")]
        System.IAsyncResult BeginPerformTransfer(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO from, Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO to, decimal amount, System.AsyncCallback callback, object asyncState);
        
        void EndPerformTransfer(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBankingModuleServiceChannel : Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LockBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LockBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindBankAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindBankAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FindBankAccountActivitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FindBankAccountActivitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankActivityDTO> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankActivityDTO>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BankingModuleServiceClient : System.ServiceModel.ClientBase<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService>, Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService {
        
        private BeginOperationDelegate onBeginAddNewBankAccountDelegate;
        
        private EndOperationDelegate onEndAddNewBankAccountDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewBankAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginLockBankAccountDelegate;
        
        private EndOperationDelegate onEndLockBankAccountDelegate;
        
        private System.Threading.SendOrPostCallback onLockBankAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindBankAccountsDelegate;
        
        private EndOperationDelegate onEndFindBankAccountsDelegate;
        
        private System.Threading.SendOrPostCallback onFindBankAccountsCompletedDelegate;
        
        private BeginOperationDelegate onBeginFindBankAccountActivitiesDelegate;
        
        private EndOperationDelegate onEndFindBankAccountActivitiesDelegate;
        
        private System.Threading.SendOrPostCallback onFindBankAccountActivitiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginPerformTransferDelegate;
        
        private EndOperationDelegate onEndPerformTransferDelegate;
        
        private System.Threading.SendOrPostCallback onPerformTransferCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public BankingModuleServiceClient() {
        }
        
        public BankingModuleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BankingModuleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BankingModuleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BankingModuleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<AddNewBankAccountCompletedEventArgs> AddNewBankAccountCompleted;
        
        public event System.EventHandler<LockBankAccountCompletedEventArgs> LockBankAccountCompleted;
        
        public event System.EventHandler<FindBankAccountsCompletedEventArgs> FindBankAccountsCompleted;
        
        public event System.EventHandler<FindBankAccountActivitiesCompletedEventArgs> FindBankAccountActivitiesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> PerformTransferCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService.BeginAddNewBankAccount(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO bankAccount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewBankAccount(bankAccount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService.EndAddNewBankAccount(System.IAsyncResult result) {
            return base.Channel.EndAddNewBankAccount(result);
        }
        
        private System.IAsyncResult OnBeginAddNewBankAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO bankAccount = ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO)(inValues[0]));
            return ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService)(this)).BeginAddNewBankAccount(bankAccount, callback, asyncState);
        }
        
        private object[] OnEndAddNewBankAccount(System.IAsyncResult result) {
            Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO retVal = ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService)(this)).EndAddNewBankAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewBankAccountCompleted(object state) {
            if ((this.AddNewBankAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewBankAccountCompleted(this, new AddNewBankAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewBankAccountAsync(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO bankAccount) {
            this.AddNewBankAccountAsync(bankAccount, null);
        }
        
        public void AddNewBankAccountAsync(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO bankAccount, object userState) {
            if ((this.onBeginAddNewBankAccountDelegate == null)) {
                this.onBeginAddNewBankAccountDelegate = new BeginOperationDelegate(this.OnBeginAddNewBankAccount);
            }
            if ((this.onEndAddNewBankAccountDelegate == null)) {
                this.onEndAddNewBankAccountDelegate = new EndOperationDelegate(this.OnEndAddNewBankAccount);
            }
            if ((this.onAddNewBankAccountCompletedDelegate == null)) {
                this.onAddNewBankAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewBankAccountCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewBankAccountDelegate, new object[] {
                        bankAccount}, this.onEndAddNewBankAccountDelegate, this.onAddNewBankAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService.BeginLockBankAccount(System.Guid bankAccountId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLockBankAccount(bankAccountId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService.EndLockBankAccount(System.IAsyncResult result) {
            return base.Channel.EndLockBankAccount(result);
        }
        
        private System.IAsyncResult OnBeginLockBankAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid bankAccountId = ((System.Guid)(inValues[0]));
            return ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService)(this)).BeginLockBankAccount(bankAccountId, callback, asyncState);
        }
        
        private object[] OnEndLockBankAccount(System.IAsyncResult result) {
            bool retVal = ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService)(this)).EndLockBankAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLockBankAccountCompleted(object state) {
            if ((this.LockBankAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LockBankAccountCompleted(this, new LockBankAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LockBankAccountAsync(System.Guid bankAccountId) {
            this.LockBankAccountAsync(bankAccountId, null);
        }
        
        public void LockBankAccountAsync(System.Guid bankAccountId, object userState) {
            if ((this.onBeginLockBankAccountDelegate == null)) {
                this.onBeginLockBankAccountDelegate = new BeginOperationDelegate(this.OnBeginLockBankAccount);
            }
            if ((this.onEndLockBankAccountDelegate == null)) {
                this.onEndLockBankAccountDelegate = new EndOperationDelegate(this.OnEndLockBankAccount);
            }
            if ((this.onLockBankAccountCompletedDelegate == null)) {
                this.onLockBankAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLockBankAccountCompleted);
            }
            base.InvokeAsync(this.onBeginLockBankAccountDelegate, new object[] {
                        bankAccountId}, this.onEndLockBankAccountDelegate, this.onLockBankAccountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService.BeginFindBankAccounts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindBankAccounts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO> Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService.EndFindBankAccounts(System.IAsyncResult result) {
            return base.Channel.EndFindBankAccounts(result);
        }
        
        private System.IAsyncResult OnBeginFindBankAccounts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService)(this)).BeginFindBankAccounts(callback, asyncState);
        }
        
        private object[] OnEndFindBankAccounts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO> retVal = ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService)(this)).EndFindBankAccounts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindBankAccountsCompleted(object state) {
            if ((this.FindBankAccountsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindBankAccountsCompleted(this, new FindBankAccountsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindBankAccountsAsync() {
            this.FindBankAccountsAsync(null);
        }
        
        public void FindBankAccountsAsync(object userState) {
            if ((this.onBeginFindBankAccountsDelegate == null)) {
                this.onBeginFindBankAccountsDelegate = new BeginOperationDelegate(this.OnBeginFindBankAccounts);
            }
            if ((this.onEndFindBankAccountsDelegate == null)) {
                this.onEndFindBankAccountsDelegate = new EndOperationDelegate(this.OnEndFindBankAccounts);
            }
            if ((this.onFindBankAccountsCompletedDelegate == null)) {
                this.onFindBankAccountsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindBankAccountsCompleted);
            }
            base.InvokeAsync(this.onBeginFindBankAccountsDelegate, null, this.onEndFindBankAccountsDelegate, this.onFindBankAccountsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService.BeginFindBankAccountActivities(System.Guid bankAccountId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFindBankAccountActivities(bankAccountId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankActivityDTO> Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService.EndFindBankAccountActivities(System.IAsyncResult result) {
            return base.Channel.EndFindBankAccountActivities(result);
        }
        
        private System.IAsyncResult OnBeginFindBankAccountActivities(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid bankAccountId = ((System.Guid)(inValues[0]));
            return ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService)(this)).BeginFindBankAccountActivities(bankAccountId, callback, asyncState);
        }
        
        private object[] OnEndFindBankAccountActivities(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankActivityDTO> retVal = ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService)(this)).EndFindBankAccountActivities(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFindBankAccountActivitiesCompleted(object state) {
            if ((this.FindBankAccountActivitiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FindBankAccountActivitiesCompleted(this, new FindBankAccountActivitiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FindBankAccountActivitiesAsync(System.Guid bankAccountId) {
            this.FindBankAccountActivitiesAsync(bankAccountId, null);
        }
        
        public void FindBankAccountActivitiesAsync(System.Guid bankAccountId, object userState) {
            if ((this.onBeginFindBankAccountActivitiesDelegate == null)) {
                this.onBeginFindBankAccountActivitiesDelegate = new BeginOperationDelegate(this.OnBeginFindBankAccountActivities);
            }
            if ((this.onEndFindBankAccountActivitiesDelegate == null)) {
                this.onEndFindBankAccountActivitiesDelegate = new EndOperationDelegate(this.OnEndFindBankAccountActivities);
            }
            if ((this.onFindBankAccountActivitiesCompletedDelegate == null)) {
                this.onFindBankAccountActivitiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFindBankAccountActivitiesCompleted);
            }
            base.InvokeAsync(this.onBeginFindBankAccountActivitiesDelegate, new object[] {
                        bankAccountId}, this.onEndFindBankAccountActivitiesDelegate, this.onFindBankAccountActivitiesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService.BeginPerformTransfer(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO from, Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO to, decimal amount, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPerformTransfer(from, to, amount, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService.EndPerformTransfer(System.IAsyncResult result) {
            base.Channel.EndPerformTransfer(result);
        }
        
        private System.IAsyncResult OnBeginPerformTransfer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO from = ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO)(inValues[0]));
            Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO to = ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO)(inValues[1]));
            decimal amount = ((decimal)(inValues[2]));
            return ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService)(this)).BeginPerformTransfer(from, to, amount, callback, asyncState);
        }
        
        private object[] OnEndPerformTransfer(System.IAsyncResult result) {
            ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService)(this)).EndPerformTransfer(result);
            return null;
        }
        
        private void OnPerformTransferCompleted(object state) {
            if ((this.PerformTransferCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PerformTransferCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PerformTransferAsync(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO from, Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO to, decimal amount) {
            this.PerformTransferAsync(from, to, amount, null);
        }
        
        public void PerformTransferAsync(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO from, Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO to, decimal amount, object userState) {
            if ((this.onBeginPerformTransferDelegate == null)) {
                this.onBeginPerformTransferDelegate = new BeginOperationDelegate(this.OnBeginPerformTransfer);
            }
            if ((this.onEndPerformTransferDelegate == null)) {
                this.onEndPerformTransferDelegate = new EndOperationDelegate(this.OnEndPerformTransfer);
            }
            if ((this.onPerformTransferCompletedDelegate == null)) {
                this.onPerformTransferCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPerformTransferCompleted);
            }
            base.InvokeAsync(this.onBeginPerformTransferDelegate, new object[] {
                        from,
                        to,
                        amount}, this.onEndPerformTransferDelegate, this.onPerformTransferCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService CreateChannel() {
            return new BankingModuleServiceClientChannel(this);
        }
        
        private class BankingModuleServiceClientChannel : ChannelBase<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService>, Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService {
            
            public BankingModuleServiceClientChannel(System.ServiceModel.ClientBase<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.IBankingModuleService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddNewBankAccount(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO bankAccount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = bankAccount;
                System.IAsyncResult _result = base.BeginInvoke("AddNewBankAccount", _args, callback, asyncState);
                return _result;
            }
            
            public Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO EndAddNewBankAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO _result = ((Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO)(base.EndInvoke("AddNewBankAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginLockBankAccount(System.Guid bankAccountId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = bankAccountId;
                System.IAsyncResult _result = base.BeginInvoke("LockBankAccount", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndLockBankAccount(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("LockBankAccount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFindBankAccounts(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("FindBankAccounts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO> EndFindBankAccounts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO> _result = ((System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO>)(base.EndInvoke("FindBankAccounts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginFindBankAccountActivities(System.Guid bankAccountId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = bankAccountId;
                System.IAsyncResult _result = base.BeginInvoke("FindBankAccountActivities", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankActivityDTO> EndFindBankAccountActivities(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankActivityDTO> _result = ((System.Collections.ObjectModel.ObservableCollection<Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankActivityDTO>)(base.EndInvoke("FindBankAccountActivities", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginPerformTransfer(Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO from, Microsoft.Samples.NLayerApp.Silverlight.AgentServices.Proxies.BankingModule.BankAccountDTO to, decimal amount, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = from;
                _args[1] = to;
                _args[2] = amount;
                System.IAsyncResult _result = base.BeginInvoke("PerformTransfer", _args, callback, asyncState);
                return _result;
            }
            
            public void EndPerformTransfer(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("PerformTransfer", _args, result);
            }
        }
    }
}
